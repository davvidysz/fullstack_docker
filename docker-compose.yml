version: '2'
services:
    mysql:
        image: mysql:5.7
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        container_name: mysql
        volumes:
            - "./mysql:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    redis:
        image: redis
        container_name: redis
    php:
        build:
            context: php7.3-fpm
            args:
                TIMEZONE: ${TIMEZONE}
        volumes:
            - ${BACKEND_FOLDER}:/var/www/symfony
        container_name: php
    nginx:
        build: nginx
        container_name: nginx
        ports:
            - 8080:80
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx
    node:
        build:
            context: node
        container_name: node
        ports:
            - 4200:4200
            - 3000:3000
        tty: true
        volumes:
            - ${FRONTEND_FOLDER}:/app
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            MYSQL_USERNAME: root
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            PMA_HOST: mysql
        links:
            - mysql
        ports:
            - 8081:80
    rabbit:
        container_name: rabbit
        hostname: rabbit
        image: rabbitmq:3-management
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
        volumes:
            - ./rabbitmq:/var/lib/rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
        container_name: elasticsearch
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - http.cors.enabled=true
            - http.cors.allow-origin=*
            - discovery.type=single-node
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
        volumes:
            - ./elasticsearch:/usr/share/elasticsearch/data
        volumes_from:
            - php
            - nginx
    kibana:
        image: docker.elastic.co/kibana/kibana:7.1.0
        container_name: kibana
        environment:
            SERVER_NAME: kibana.local
            ELASTICSEARCH_URL: http://elasticsearch:9200
        ports:
            - '5601:5601'